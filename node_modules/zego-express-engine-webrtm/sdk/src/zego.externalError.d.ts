export declare const errorCodeList: {
    SERVER: {
        code: number;
        msg: string;
    };
    SUCCESS: {
        code: number;
        msg: string;
    };
    INIT: {
        code: number;
        msg: string;
    };
    NOT_LOGIN: {
        code: number;
        msg: string;
    };
    APPID_INVALID: {
        code: number;
        msg: string;
    };
    NETWORK_BROKEN: {
        code: number;
        msg: string;
    };
    INPUT_PARAM: {
        code: number;
        msg: string;
    };
    TIMEOUT: {
        code: number;
        msg: string;
    };
    SOCKET_CLOSE: {
        code: number;
        msg: string;
    };
    NET_SOCKET_TIMEOUT: {
        code: number;
        msg: string;
    };
    NET_HB_TIMEOUT: {
        code: number;
        msg: string;
    };
    INIT_SDK_WRONG: {
        code: number;
        msg: string;
    };
    ROOM_COUNT_EXCEED: {
        code: number;
        msg: string;
    };
    USER_ID_NULL: {
        code: number;
        msg: string;
    };
    USER_ID_INVALID_CHARACTER: {
        code: number;
        msg: string;
    };
    USER_ID_TOO_LONG: {
        code: number;
        msg: string;
    };
    USER_NAME_NULL: {
        code: number;
        msg: string;
    };
    USER_NAME_TOO_LONG: {
        code: number;
        msg: string;
    };
    ROOM_ID_NULL: {
        code: number;
        msg: string;
    };
    ROOM_ID_INVALID_CHARACTER: {
        code: number;
        msg: string;
    };
    ROOM_ID_TOO_LONG: {
        code: number;
        msg: string;
    };
    ROOM_NOT_EXIST: {
        code: number;
        msg: string;
    };
    LOGIN_TIMEOUT: {
        code: number;
        msg: string;
    };
    ROOM_MAX_USER_COUNT: {
        code: number;
        msg: string;
    };
    MULTI_ROOM_UNABLE: {
        code: number;
        msg: string;
    };
    MULTIPLE_LOGIN_KICKOUT: {
        code: number;
        msg: string;
    };
    NETWORK_RECOVERY: {
        code: number;
        msg: string;
    };
    ROOM_RETRY_TIMEOUT: {
        code: number;
        msg: string;
    };
    MANUAL_KICKOUT: {
        code: number;
        msg: string;
    };
    REPEATEDLY_LOGIN: {
        code: number;
        msg: string;
    };
    REPEATEDLY_ENTER_ROOM: {
        code: number;
        msg: string;
    };
    ALREADY_LOGIN: {
        code: number;
        msg: string;
    };
    FORBID_BLACK_USER: {
        code: number;
        msg: string;
    };
    ROOM_INNER_ERROR: {
        code: number;
        msg: string;
    };
    HEARTBEAT_TIMEOUT: {
        code: number;
        msg: string;
    };
    PARSE_JSON_ERROR: {
        code: number;
        msg: string;
    };
    LOGIN_PROCESSING: {
        code: number;
        msg: string;
    };
    LIVEROMM_REQUEST_ERROR: {
        code: number;
        msg: string;
    };
    ZPUSH_REQUEST_FAIL: {
        code: number;
        msg: string;
    };
    LOGIN_STATE_WRONG: {
        code: number;
        msg: string;
    };
    TOKEN_ERROR: {
        code: number;
        msg: string;
    };
    DIAPATCH_ERROR: {
        code: number;
        msg: string;
    };
    TOKEN_EXPIRED: {
        code: number;
        msg: string;
    };
    SUBCMD_ERROR: {
        code: number;
        msg: string;
    };
    ZEGO_AUTH_ERROR: {
        code: number;
        msg: string;
    };
    BIZ_CHANNEL_ERROR: {
        code: number;
        msg: string;
    };
};
